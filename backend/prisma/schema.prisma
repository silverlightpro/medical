// Prisma schema for VA Claim Assistant
// SQLite datasource

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String    @id @default(cuid())
  email        String    @unique
  passwordHash String
  firstName    String
  lastName     String
  claims       Claim[]
  documents    Document[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Claim {
  id                   String    @id @default(cuid())
  userId               String
  user                 User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  status               String    @default("Draft")
  caseDescription      String?
  claimSetupData       String?   // JSON string
  analysisQuestions    String?   // JSON string
  userAnswers          String?   // JSON string
  potentialClaimEvents String?   // JSON string
  selectedClaims       String?   // JSON string
  finalDocument        String?   // JSON string
  vaFormData           String?   // JSON string
  statusHistory        String?   // JSON string array of {status, at}
  archived             Boolean   @default(false)
  documents            Document[]
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
}

model Document {
  id           String   @id @default(cuid())
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  claimId      String?  
  claim        Claim?   @relation(fields: [claimId], references: [id], onDelete: SetNull)
  fileName     String
  storagePath  String
  extractedText String?
  createdAt    DateTime @default(now())
}
